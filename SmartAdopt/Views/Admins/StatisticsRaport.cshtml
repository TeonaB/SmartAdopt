@model StatisticsReportViewModel

@{
    ViewData["Title"] = "Statistics Report";
}

<style>
    .card {
        border: none;
        border-radius: 15px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        transition: transform 0.2s;
    }
    .card:hover {
        transform: translateY(-5px);
    }
    .circle-progress {
        width: 100px;
        height: 100px;
        border-radius: 50%;
        background: conic-gradient(#4CAF50 var(--percentage), #e0e0e0 0);
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: bold;
        color: #000; /* Changed from #333 to black */
        margin: 0 auto;
    }
    .circle-progress::before {
        content: attr(data-percentage) "%";
    }
    /* Ensure all text is black */
     h2, h4, li {
        color: #000 !important; /* Override any inherited colors */
    }
    /* Make charts smaller */
    .chart-container {
        width: 100%;
        max-width: 400px; /* Adjust this value to control chart width */
        margin: 0 auto;
    }
    canvas {
        width: 100% !important;
        height: 200px !important; /* Adjust height to make charts smaller */
    }
</style>

<!-- JavaScript for Chart.js -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<div class="container mt-5">
    <h1 class="text-center mb-4">Pet Adoption Site Statistics Report</h1> <!-- Removed text-primary -->
    <p class="text-center">Generated on @DateTime.Now.ToString("MMMM dd, yyyy hh:mm tt") EEST</p> <!-- Removed text-muted -->

    <!-- User Activity Section -->
    <div class="row mb-5">
        <div class="col-md-4">
            <div class="card p-4 text-center">
                <h4>Total Registered Users</h4>
                <h2>@Model.TotalRegisteredUsers</h2>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card p-4 text-center">
                <h4>Users with Completed Profile</h4>
                <div class="circle-progress" style="--percentage: @(Model.TotalRegisteredUsers > 0 ? Model.UsersWithCompletedProfile * 100.0 / Model.TotalRegisteredUsers * 3.6 : 0)deg" data-percentage="@(Model.TotalRegisteredUsers > 0 ? (Model.UsersWithCompletedProfile * 100.0 / Model.TotalRegisteredUsers).ToString("F1") : "0")"></div>
                <h2>@Model.UsersWithCompletedProfile</h2>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card p-4 text-center">
                <h4>Users Interacted with Blog</h4>
                <h2>@Model.UsersInteractedWithBlog</h2>
            </div>
        </div>
    </div>

    <!-- Recommendation Insights Section -->
    <div class="row mb-5">
        <div class="col-md-4">
            <div class="card p-4 text-center">
                <h4>Total Recommendations Generated</h4>
                <h2>@Model.TotalRecommendationsGenerated</h2>
            </div>
        </div>
        <div class="col-md-8">
            <div class="card p-4">
                <h4>Top 5 Recommended Animals</h4>
                <ul class="list-group">
                    @foreach (var animal in Model.TopRecommendedAnimals)
                    {
                        <li class="list-group-item">@animal.nume (@animal.specie) - @animal.Count times</li>
                    }
                </ul>
            </div>
        </div>
    </div>
    <div class="row mb-5">
        <div class="col-md-6">
            <div class="card p-4 text-center">
                <h4>Orders from Recommendations</h4>
                <h2>@Model.OrdersFromRecommendations</h2>
            </div>
        </div>
    </div>

    <!-- Animal Data Section -->
    <div class="row mb-5">
        <div class="col-md-4">
            <div class="card p-4 text-center">
                <h4>Total Animals</h4>
                <h2>@Model.TotalAnimals</h2>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card p-4 text-center">
                <h4>Total Animals Adopted</h4>
                <div class="circle-progress" style="--percentage: @(Model.TotalAnimals > 0 ? Model.TotalAnimalsAdopted * 100.0 / (Model.TotalAnimals + Model.TotalAnimalsAdopted)* 3.6 : 0)deg" data-percentage="@(Model.TotalAnimals > 0 ? (Model.TotalAnimalsAdopted * 100.0 / (Model.TotalAnimals + Model.TotalAnimalsAdopted) ).ToString("F1") : "0")"></div>
                <h2>@Model.TotalAnimalsAdopted</h2>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card p-4 text-center">
                <h4>Animals Never Recommended</h4>
                <h2>@Model.AnimalsNeverRecommended.Count</h2>
            </div>
        </div>
    </div>
    <div class="row mb-5">
        <div class="col-md-6">
            <div class="card p-4">
                <h4>Animals by Species</h4>
                <div class="chart-container">
                    <canvas id="speciesChart"></canvas>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="card p-4">
                <h4>Average Attributes</h4>
                <ul class="list-group">
                    <li class="list-group-item">Size: @Model.AverageAttributes.AvgSize.ToString("F1")</li>
                    <li class="list-group-item">Energy Level: @Model.AverageAttributes.AvgEnergy.ToString("F1")</li>
                    <li class="list-group-item">Attention Required: @Model.AverageAttributes.AvgAttention.ToString("F1")</li>
                    <li class="list-group-item">Adaptability: @Model.AverageAttributes.AvgAdaptability.ToString("F1")</li>
                    <li class="list-group-item">Age Group: @Model.AverageAttributes.AvgAgeGroup.ToString("F1")</li>
                </ul>
            </div>
        </div>
    </div>
    <div class="row mb-5">
        <div class="col-md-12">
            <div class="card p-4">
                <h4>Order Statuses</h4>
                <div class="chart-container">
                    <canvas id="orderStatusChart"></canvas>
                </div>
            </div>
        </div>
    </div>

    <!-- Chart.js Initialization -->
    <script>
        // Species Chart
        new Chart(document.getElementById('speciesChart'), {
            type: 'bar',
            data: {
                labels: @Html.Raw(Json.Serialize(Model.AnimalsBySpecies.Select(s => s.Species))),
                datasets: [{
                    label: 'Number of Animals',
                    data: @Html.Raw(Json.Serialize(Model.AnimalsBySpecies.Select(s => s.Count))),
                    backgroundColor: 'rgba(76, 175, 80, 0.6)'
                }]
            },
            options: {
                scales: { y: { beginAtZero: true } },
                plugins: { legend: { display: true } },
                responsive: true,
                maintainAspectRatio: false 
            }
        });

        // Order Status Chart
        new Chart(document.getElementById('orderStatusChart'), {
            type: 'pie',
            data: {
                labels: @Html.Raw(Json.Serialize(Model.OrderStatuses.Select(s => s.Status))),
                datasets: [{
                    data: @Html.Raw(Json.Serialize(Model.OrderStatuses.Select(s => s.Count))),
                    backgroundColor: ['#4CAF50', '#FF9800', '#F44336']
                }]
            },
            options: {
                plugins: { legend: { position: 'bottom' } },
                responsive: true,
                maintainAspectRatio: false 
            }
        });
    </script>
</div>